name: Android Signed Release - 延迟测试游戏

on:
  push:
    tags:
      - 'v*'  # 触发标签推送时构建签名版本
  workflow_dispatch:  # 手动触发

jobs:
  build-signed-release:
    runs-on: ubuntu-latest
    env:
      JAVA_HOME: /usr/lib/jvm/java-17-openjdk-amd64
      ANDROID_API_LEVEL: 33
      ANDROID_BUILD_TOOLS: "33.0.2"

    steps:
    - name: Checkout代码
      uses: actions/checkout@v4

    - name: 设置Java 17
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: 17

    - name: 安装Android SDK工具
      run: |
        sudo apt-get update
        sudo apt-get install -y wget unzip
        mkdir -p $HOME/android-sdk
        export ANDROID_SDK_ROOT=$HOME/android-sdk
        echo "ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT" >> $GITHUB_ENV
        echo "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin" >> $GITHUB_PATH
        echo "$ANDROID_SDK_ROOT/platform-tools" >> $GITHUB_PATH

        # 下载并安装Android命令行工具
        wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O cmdline-tools.zip
        unzip -q cmdline-tools.zip -d $ANDROID_SDK_ROOT/cmdline-tools
        mv $ANDROID_SDK_ROOT/cmdline-tools/cmdline-tools $ANDROID_SDK_ROOT/cmdline-tools/latest

        # 接受许可证
        yes | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --sdk_root=$ANDROID_SDK_ROOT --licenses

        # 安装必要的SDK组件
        $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --sdk_root=$ANDROID_SDK_ROOT \
          "platform-tools" \
          "platforms;android-$ANDROID_API_LEVEL" \
          "build-tools;$ANDROID_BUILD_TOOLS"

    - name: 创建keystore目录
      run: mkdir -p app/keystore

    - name: 解密keystore (如果需要)
      if: ${{ secrets.KEYSTORE_BASE64 != '' }}
      run: |
        echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > app/keystore/release.keystore
        echo "Keystore文件已创建"

    - name: 设置执行权限
      run: chmod +x ./gradlew

    - name: 构建签名的Release APK
      if: ${{ secrets.KEYSTORE_BASE64 != '' }}
      run: |
        ./gradlew assembleRelease --no-daemon --stacktrace \
          -Pandroid.enableJetifier=true \
          -Pandroid.useAndroidX=true
      env:
        RELEASE_STORE_FILE: ${{ github.workspace }}/app/keystore/release.keystore
        RELEASE_STORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
        RELEASE_KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
        RELEASE_KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}

    - name: 构建无签名的Release APK
      if: ${{ secrets.KEYSTORE_BASE64 == '' }}
      run: ./gradlew assembleRelease --no-daemon --stacktrace

    - name: 上传签名的Release APK
      uses: actions/upload-artifact@v4
      with:
        name: latency-test-game-signed-release
        path: app/build/outputs/apk/release/*.apk
        retention-days: 90

    - name: 显示构建信息
      run: |
        echo "🎮 签名版本构建完成!"
        echo "📱 Release APK已上传"
        echo "📊 文件信息:"
        ls -lah app/build/outputs/apk/release/

    - name: 创建GitHub Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: 延迟测试游戏 ${{ github.ref }}
        body: |
          ## 🎮 延迟测试游戏更新

          - 精确的毫秒级延迟测试
          - S/A/B/C/D五级评价系统
          - 关卡进度和得分系统
          - 实时延迟反馈显示

          ## 📱 下载APK
          请在Actions页面下载对应的APK文件
        draft: false
        prerelease: false